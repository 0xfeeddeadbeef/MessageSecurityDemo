<?xml version="1.0" encoding="utf-8"?>
<configuration>

    <appSettings>
        <add key="aspnet:UseTaskFriendlySynchronizationContext"
             value="true"/>
    </appSettings>

    <system.web>
        <compilation debug="true"
                     targetFramework="4.6.1"/>
        <httpRuntime targetFramework="4.6.1"/>
    </system.web>

    <system.serviceModel>
        <behaviors>
            <serviceBehaviors>
                <behavior name="behaviors-default">
                    <serviceMetadata httpGetEnabled="true"
                                     httpsGetEnabled="true"/>
                    <serviceDebug includeExceptionDetailInFaults="true"/>
                    <serviceCredentials>
                        <serviceCertificate findValue="FC97986427368B333A05646BA8A8F08A7FF8EB4C"
                                            storeLocation="LocalMachine"
                                            storeName="My"
                                            x509FindType="FindByThumbprint"/>
                        <clientCertificate>
                            <authentication certificateValidationMode="PeerOrChainTrust"
                                            includeWindowsGroups="false"
                                            mapClientCertificateToWindowsAccount="false"
                                            revocationMode="NoCheck"
                                            trustedStoreLocation="LocalMachine"
                                            />
                        </clientCertificate>
                    </serviceCredentials>
                </behavior>
            </serviceBehaviors>
        </behaviors>

        <bindings>
            <wsHttpBinding>
                <binding name="bindings-wshttp"
                         transactionFlow="false"
                         messageEncoding="Text">
                    <security mode="Message">
                        <message clientCredentialType="Certificate"
                                 establishSecurityContext="false"
                                 negotiateServiceCredential="false"/>
                    </security>
                    <reliableSession enabled="false"/>
                </binding>
            </wsHttpBinding>

            <basicHttpBinding>
                <binding name="bindings-basic">
                    <security mode="Message">
                        <message clientCredentialType="Certificate"/>
                    </security>
                </binding>
            </basicHttpBinding>

            <customBinding>
                <binding name="bindings-customLogging">
                    <security defaultAlgorithmSuite="Default"
                              authenticationMode="MutualCertificate"
                              requireDerivedKeys="false"
                              securityHeaderLayout="Lax"
                              includeTimestamp="true"
                              messageSecurityVersion="WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
                              requireSignatureConfirmation="false">
                        <localClientSettings detectReplays="true" />
                        <localServiceSettings detectReplays="true" />
                    </security>
                    <loggingMessageEncoding innerMessageEncoding="textMessageEncoding" />
                    <httpTransport />
                </binding>
            </customBinding>
        </bindings>

        <protocolMapping>
            <add binding="basicHttpsBinding"
                 scheme="https"/>
            <add binding="wsHttpBinding"
                 scheme="http"/>
        </protocolMapping>

        <serviceHostingEnvironment aspNetCompatibilityEnabled="false"
                                   multipleSiteBindingsEnabled="true" />

        <services>
            <service name="TheService.Service1"
                     behaviorConfiguration="behaviors-default">
                <endpoint address=""
                          binding="customBinding"
                          bindingConfiguration="bindings-customLogging"
                          contract="TheService.IService1"
                          name="endpoints-basic">
                    <identity>
                        <certificateReference findValue="FC97986427368B333A05646BA8A8F08A7FF8EB4C"
                                              isChainIncluded="false"
                                              storeLocation="LocalMachine"
                                              storeName="My"
                                              x509FindType="FindByThumbprint"/>
                    </identity>

                </endpoint>
                <endpoint address="mex"
                          binding="mexHttpBinding"
                          contract="IMetadataExchange"
                          name="endpoints-metadata"/>
            </service>
        </services>

        <diagnostics performanceCounters="Off"
                     wmiProviderEnabled="false">
            <messageLogging logEntireMessage="true"
                            logKnownPii="true"
                            logMalformedMessages="true"
                            logMessagesAtTransportLevel="true"
                            logMessagesAtServiceLevel="false"
                            maxMessagesToLog="1000000"
                            maxSizeOfMessageToLog="200000000"/>
        </diagnostics>

        <extensions>
            <bindingElementExtensions>
                <add name="loggingMessageEncoding"
                     type="TheService.LoggingMessageEncodingBindingElementExtensionElement, TheService" />
            </bindingElementExtensions>
        </extensions>
    </system.serviceModel>

    <system.webServer>
        <modules runAllManagedModulesForAllRequests="true"/>
        <directoryBrowse enabled="true"/>
    </system.webServer>

    <system.diagnostics>
        <sources>
            <source name="System.ServiceModel.MessageLogging">
                <listeners>
                    <add name="xml" />
                </listeners>
            </source>
        </sources>
        <sharedListeners>
            <add name="xml"
                 type="System.Diagnostics.XmlWriterTraceListener"
                 initializeData="Z:\Logs\TheService.svclog" />
        </sharedListeners>
    </system.diagnostics>

</configuration>
